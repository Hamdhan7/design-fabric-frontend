{"ast":null,"code":"var _jsxFileName = \"/Users/hamthanahamed/WebstormProjects/Design-Fabric/Design-Fabric-Frontend/src/Components/OrderConfirmation/OrderConfirmation.js\",\n  _s = $RefreshSig$();\n// OrderConfirmation.js\nimport React, { useState } from 'react';\nimport './OrderConfirmation.css'; // Import additional CSS for OrderConfirmation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderConfirmation = ({\n  ProductId,\n  onClose,\n  onConfirmOrder\n}) => {\n  _s();\n  const [CustomerName, setCustomerName] = useState('');\n  const [CustomerEmail, setCustomerEmail] = useState('');\n  const [CustomerPhoneNumber, setCustomerPhoneNumber] = useState('');\n  const [CustomerAddress, setCustomerAddress] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [phoneError, setPhoneError] = useState('');\n  const [addressError, setAddressError] = useState('');\n  const handleConfirmOrder = () => {\n    // Validate input data\n    const isValidPhone = /^\\d{10}$/.test(CustomerPhoneNumber) && CustomerPhoneNumber.startsWith('0');\n\n    // Set error messages\n    setNameError(CustomerName ? '' : 'Name cannot be empty');\n    setEmailError(CustomerEmail ? '' : 'Email cannot be empty');\n    setPhoneError(isValidPhone ? '' : 'Invalid phone number');\n    setAddressError(CustomerAddress ? '' : 'Address cannot be empty');\n\n    // Check if there are any validation errors\n    if (!CustomerName || !CustomerEmail || !isValidPhone || !CustomerAddress) {\n      return;\n    }\n\n    // Call the onConfirmOrder callback with the order details\n    onConfirmOrder({\n      ProductId,\n      CustomerName,\n      CustomerEmail,\n      CustomerPhoneNumber,\n      CustomerAddress\n    });\n\n    // Close the popup\n    onClose();\n  };\n  const handleInputChange = (e, setError) => {\n    // Clear the corresponding error when the user starts typing again\n    setError('');\n    // Update the state with the new input value\n    switch (e.target.name) {\n      case 'CustomerName':\n        setCustomerName(e.target.value);\n        break;\n      case 'CustomerEmail':\n        setCustomerEmail(e.target.value);\n        break;\n      case 'CustomerPhoneNumber':\n        setCustomerPhoneNumber(e.target.value);\n        break;\n      case 'CustomerAddress':\n        setCustomerAddress(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-confirmation-popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-confirmation-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Confirm Your Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Product ID: \", ProductId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-confirmation-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"CustomerName\",\n          value: CustomerName,\n          onChange: e => handleInputChange(e, setNameError),\n          placeholder: \"Your Name\",\n          className: nameError ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), nameError && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: nameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-confirmation-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"CustomerEmail\",\n          value: CustomerEmail,\n          onChange: e => handleInputChange(e, setEmailError),\n          placeholder: \"Your Email\",\n          className: emailError ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-confirmation-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"CustomerPhoneNumber\",\n          value: CustomerPhoneNumber,\n          onChange: e => handleInputChange(e, setPhoneError),\n          placeholder: \"Your Phone Number\",\n          className: phoneError ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), phoneError && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: phoneError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-confirmation-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"CustomerAddress\",\n          value: CustomerAddress,\n          onChange: e => handleInputChange(e, setAddressError),\n          placeholder: \"Your Address\",\n          className: addressError ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), addressError && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: addressError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-confirmation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"order-confirmation-register-button\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"order-confirmation-login-button\",\n          onClick: handleConfirmOrder,\n          children: \"Confirm Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderConfirmation, \"HKaZxIbK8Jcq8sA4n5u9djb5cso=\");\n_c = OrderConfirmation;\nexport default OrderConfirmation;\nvar _c;\n$RefreshReg$(_c, \"OrderConfirmation\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","OrderConfirmation","ProductId","onClose","onConfirmOrder","_s","CustomerName","setCustomerName","CustomerEmail","setCustomerEmail","CustomerPhoneNumber","setCustomerPhoneNumber","CustomerAddress","setCustomerAddress","nameError","setNameError","emailError","setEmailError","phoneError","setPhoneError","addressError","setAddressError","handleConfirmOrder","isValidPhone","test","startsWith","handleInputChange","e","setError","target","name","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/hamthanahamed/WebstormProjects/Design-Fabric/Design-Fabric-Frontend/src/Components/OrderConfirmation/OrderConfirmation.js"],"sourcesContent":["// OrderConfirmation.js\nimport React, { useState } from 'react';\nimport './OrderConfirmation.css'; // Import additional CSS for OrderConfirmation\n\nconst OrderConfirmation = ({ ProductId, onClose, onConfirmOrder }) => {\n  const [CustomerName, setCustomerName] = useState('');\n  const [CustomerEmail, setCustomerEmail] = useState('');\n  const [CustomerPhoneNumber, setCustomerPhoneNumber] = useState('');\n  const [CustomerAddress, setCustomerAddress] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [phoneError, setPhoneError] = useState('');\n  const [addressError, setAddressError] = useState('');\n\n  const handleConfirmOrder = () => {\n    // Validate input data\n    const isValidPhone =\n      /^\\d{10}$/.test(CustomerPhoneNumber) && CustomerPhoneNumber.startsWith('0');\n\n    // Set error messages\n    setNameError(CustomerName ? '' : 'Name cannot be empty');\n    setEmailError(CustomerEmail ? '' : 'Email cannot be empty');\n    setPhoneError(isValidPhone ? '' : 'Invalid phone number');\n    setAddressError(CustomerAddress ? '' : 'Address cannot be empty');\n\n    // Check if there are any validation errors\n    if (!CustomerName || !CustomerEmail || !isValidPhone || !CustomerAddress) {\n      return;\n    }\n\n    // Call the onConfirmOrder callback with the order details\n    onConfirmOrder({\n      ProductId,\n      CustomerName,\n      CustomerEmail,\n      CustomerPhoneNumber,\n      CustomerAddress,\n    });\n\n    // Close the popup\n    onClose();\n  };\n\n  const handleInputChange = (e, setError) => {\n    // Clear the corresponding error when the user starts typing again\n    setError('');\n    // Update the state with the new input value\n    switch (e.target.name) {\n      case 'CustomerName':\n        setCustomerName(e.target.value);\n        break;\n      case 'CustomerEmail':\n        setCustomerEmail(e.target.value);\n        break;\n      case 'CustomerPhoneNumber':\n        setCustomerPhoneNumber(e.target.value);\n        break;\n      case 'CustomerAddress':\n        setCustomerAddress(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"order-confirmation-popup\">\n      <div className=\"order-confirmation-content\">\n        <h1>Confirm Your Order</h1>\n        <p>Product ID: {ProductId}</p>\n        <div className=\"order-confirmation-input-container\">\n          <input\n            type=\"text\"\n            name=\"CustomerName\"\n            value={CustomerName}\n            onChange={(e) => handleInputChange(e, setNameError)}\n            placeholder=\"Your Name\"\n            className={nameError ? 'error' : ''}\n          />\n          {nameError && <span className=\"error-message\">{nameError}</span>}\n        </div>\n        <div className=\"order-confirmation-input-container\">\n          <input\n            type=\"email\"\n            name=\"CustomerEmail\"\n            value={CustomerEmail}\n            onChange={(e) => handleInputChange(e, setEmailError)}\n            placeholder=\"Your Email\"\n            className={emailError ? 'error' : ''}\n          />\n          {emailError && <span className=\"error-message\">{emailError}</span>}\n        </div>\n        <div className=\"order-confirmation-input-container\">\n          <input\n            type=\"tel\"\n            name=\"CustomerPhoneNumber\"\n            value={CustomerPhoneNumber}\n            onChange={(e) => handleInputChange(e, setPhoneError)}\n            placeholder=\"Your Phone Number\"\n            className={phoneError ? 'error' : ''}\n          />\n          {phoneError && <span className=\"error-message\">{phoneError}</span>}\n        </div>\n        <div className=\"order-confirmation-input-container\">\n          <input\n            type=\"text\"\n            name=\"CustomerAddress\"\n            value={CustomerAddress}\n            onChange={(e) => handleInputChange(e, setAddressError)}\n            placeholder=\"Your Address\"\n            className={addressError ? 'error' : ''}\n          />\n          {addressError && <span className=\"error-message\">{addressError}</span>}\n        </div>\n        <div className=\"order-confirmation-buttons\">\n          <button className=\"order-confirmation-register-button\" onClick={onClose}>\n            Cancel\n          </button>\n          <button className=\"order-confirmation-login-button\" onClick={handleConfirmOrder}>\n            Confirm Order\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderConfirmation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}